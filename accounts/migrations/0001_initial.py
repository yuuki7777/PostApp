# Generated by Django 3.2.10 on 2023-02-13 04:16

import accounts.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=20, unique=True, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.RegexValidator('^[a-zA-Z0-9]*$')], verbose_name='ユーザーネーム')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='メールアドレス')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='登録日')),
                ('is_active', models.BooleanField(default=True, verbose_name='ログイン可否')),
                ('is_staff', models.BooleanField(default=False, verbose_name='スタッフ権限')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='管理者権限')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'アカウント',
                'verbose_name_plural': 'アカウント',
            },
            managers=[
                ('objects', accounts.models.UserAccountManager()),
            ],
        ),
    ]
